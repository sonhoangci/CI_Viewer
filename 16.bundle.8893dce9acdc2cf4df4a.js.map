{"version":3,"sources":["webpack:///D:/Github/ci/demo/Viewers/extensions/cornerstone/src/utils/formatStudy.js","webpack:///D:/Github/ci/demo/Viewers/extensions/cornerstone/src/components/OHIFCornerstoneViewportOverlay.js","webpack:///D:/Github/ci/demo/Viewers/extensions/cornerstone/src/ConnectedCornerstoneViewport.js","webpack:///D:/Github/ci/demo/Viewers/extensions/cornerstone/src/OHIFCornerstoneViewport.js"],"names":["formatNumberPrecision","number","precision","parseFloat","toFixed","OHIFCornerstoneViewportOverlay","this","props","imageId","scale","windowWidth","windowCenter","inconsistencyWarnings","value","zoomPercentage","seriesMetadata","cornerstone","metaData","get","imagePlaneModule","rows","columns","sliceThickness","sliceLocation","seriesNumber","seriesDescription","generalStudyModule","studyDate","studyTime","studyDescription","patientModule","patientId","patientName","instanceNumber","frameRate","frameTime","compression","generalImageModule","lossyImageCompression","lossyImageCompressionRatio","lossyImageCompressionMethod","getCompression","wwwc","imageDimensions","imageIndex","stackSize","inconsistencyWarningsOn","length","getWarningContent","warningList","Array","isArray","listedWarnings","map","warn","index","key","Fragment","normal","className","name","replace","trim","formatPN","date","strFormat","moment","format","formatDICOMDate","time","formatDICOMTime","placement","overlay","id","classNames","Icon","getWarningInfo","isNaN","PureComponent","PropTypes","isRequired","oneOfType","string","array","OHIF","redux","actions","setViewportActive","setViewportSpecificData","measurements","MeasurementHandlers","onAdded","onRemoved","onModified","MEASUREMENT_ACTION_MAP","added","removed","modified","throttle","event","ConnectedCornerstoneViewport","connect","state","ownProps","dataFromStore","extensions","viewportIndex","isActive","viewports","activeViewportIndex","viewportSpecificData","isPlaying","cine","cineFrameRate","isStackPrefetchEnabled","dispatch","data","onElementEnabled","enabledElement","detail","element","setEnabledElement","plugin","onMeasurementsChanged","action","CornerstoneViewport","StackManager","utils","OHIFCornerstoneViewport","viewportData","studies","StudyInstanceUID","displaySetInstanceUID","SOPInstanceUID","frameIndex","stack","getCornerstoneStack","console","log","clearStacks","Error","study","find","displaySet","displaySets","set","storedStack","findOrCreateStack","Object","assign","currentImageIdIndex","imageIds","findIndex","sopClassUIDs","getViewportData","then","setState","setStateFromProps","prevProps","prevDisplaySet","childrenWithProps","children","child","React","cloneElement","imageIdIndex","onNewImageDebounced","sopInstanceUid","onNewImage","onNewImageDebounceTime","viewportOverlayComponent","customProps","Component","object","node"],"mappings":"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","file":"16.bundle.8893dce9acdc2cf4df4a.js","sourcesContent":["import moment from 'moment';\r\n\r\n/**\r\n * Checks if value is valid.\r\n *\r\n * @param {number} value\r\n * @returns {boolean} is valid.\r\n */\r\nfunction isValidNumber(value) {\r\n  return typeof value === 'number' && !isNaN(value);\r\n}\r\n\r\n/**\r\n * Formats number precision.\r\n *\r\n * @param {number} number\r\n * @param {number} precision\r\n * @returns {number} formatted number.\r\n */\r\nfunction formatNumberPrecision(number, precision) {\r\n  if (number !== null) {\r\n    return parseFloat(number).toFixed(precision);\r\n  }\r\n}\r\n\r\n/**\r\n * Formats DICOM date.\r\n *\r\n * @param {string} date\r\n * @param {string} strFormat\r\n * @returns {string} formatted date.\r\n */\r\nfunction formatDICOMDate(date, strFormat = 'MMM D, YYYY') {\r\n  return moment(date, 'YYYYMMDD').format(strFormat);\r\n}\r\n\r\n/**\r\n *    DICOM Time is stored as HHmmss.SSS, where:\r\n *      HH 24 hour time:\r\n *        m mm        0..59   Minutes\r\n *        s ss        0..59   Seconds\r\n *        S SS SSS    0..999  Fractional seconds\r\n *\r\n *        Goal: '24:12:12'\r\n *\r\n * @param {*} time\r\n * @param {string} strFormat\r\n * @returns {string} formatted name.\r\n */\r\nfunction formatDICOMTime(time, strFormat = 'HH:mm:ss') {\r\n  return moment(time, 'HH:mm:ss').format(strFormat);\r\n}\r\n\r\n/**\r\n * Formats a patient name for display purposes\r\n *\r\n * @param {string} name\r\n * @returns {string} formatted name.\r\n */\r\nfunction formatPN(name) {\r\n  if (!name) {\r\n    return;\r\n  }\r\n\r\n  // Convert the first ^ to a ', '. String.replace() only affects\r\n  // the first appearance of the character.\r\n  const commaBetweenFirstAndLast = name.replace('^', ', ');\r\n\r\n  // Replace any remaining '^' characters with spaces\r\n  const cleaned = commaBetweenFirstAndLast.replace(/\\^/g, ' ');\r\n\r\n  // Trim any extraneous whitespace\r\n  return cleaned.trim();\r\n}\r\n\r\n/**\r\n * Gets compression type\r\n *\r\n * @param {number} imageId\r\n * @returns {string} comrpession type.\r\n */\r\nfunction getCompression(imageId) {\r\n  const generalImageModule =\r\n    cornerstone.metaData.get('generalImageModule', imageId) || {};\r\n  const {\r\n    lossyImageCompression,\r\n    lossyImageCompressionRatio,\r\n    lossyImageCompressionMethod,\r\n  } = generalImageModule;\r\n\r\n  if (lossyImageCompression === '01' && lossyImageCompressionRatio !== '') {\r\n    const compressionMethod = lossyImageCompressionMethod || 'Lossy: ';\r\n    const compressionRatio = formatNumberPrecision(\r\n      lossyImageCompressionRatio,\r\n      2\r\n    );\r\n    return compressionMethod + compressionRatio + ' : 1';\r\n  }\r\n\r\n  return 'Lossless / Uncompressed';\r\n}\r\n\r\nexport { isValidNumber,\r\n  formatNumberPrecision,\r\n  formatDICOMDate,\r\n  formatDICOMTime,\r\n  formatPN,\r\n  getCompression\r\n};\r\n","import { PureComponent } from 'react';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cornerstone from 'cornerstone-core';\r\nimport './OHIFCornerstoneViewportOverlay.css';\r\nimport {\r\n  isValidNumber,\r\n  formatNumberPrecision,\r\n  formatDICOMDate,\r\n  formatDICOMTime,\r\n  formatPN,\r\n  getCompression\r\n} from '../utils/formatStudy';\r\nimport classNames from 'classnames';\r\nimport { Icon } from '@ohif/ui/src/elements/Icon';\r\nimport { Tooltip } from '@ohif/ui/src/components/tooltip';\r\nimport { OverlayTrigger } from '@ohif/ui/src/components/overlayTrigger';\r\n\r\nclass OHIFCornerstoneViewportOverlay extends PureComponent {\r\n  static propTypes = {\r\n    scale: PropTypes.number.isRequired,\r\n    windowWidth: PropTypes.oneOfType([\r\n      PropTypes.number.isRequired,\r\n      PropTypes.string.isRequired,\r\n    ]),\r\n    windowCenter: PropTypes.oneOfType([\r\n      PropTypes.number.isRequired,\r\n      PropTypes.string.isRequired,\r\n    ]),\r\n    imageId: PropTypes.string.isRequired,\r\n    imageIndex: PropTypes.number.isRequired,\r\n    stackSize: PropTypes.number.isRequired,\r\n    inconsistencyWarnings: PropTypes.array.isRequired\r\n  };\r\n\r\n  render() {\r\n    const { imageId, scale, windowWidth, windowCenter, inconsistencyWarnings } = this.props;\r\n\r\n    if (!imageId) {\r\n      return null;\r\n    }\r\n\r\n    const zoomPercentage = formatNumberPrecision(scale * 100, 0);\r\n    const seriesMetadata =\r\n      cornerstone.metaData.get('generalSeriesModule', imageId) || {};\r\n    const imagePlaneModule =\r\n      cornerstone.metaData.get('imagePlaneModule', imageId) || {};\r\n    const { rows, columns, sliceThickness, sliceLocation } = imagePlaneModule;\r\n    const { seriesNumber, seriesDescription } = seriesMetadata;\r\n\r\n    const generalStudyModule =\r\n      cornerstone.metaData.get('generalStudyModule', imageId) || {};\r\n    const { studyDate, studyTime, studyDescription } = generalStudyModule;\r\n\r\n    const patientModule =\r\n      cornerstone.metaData.get('patientModule', imageId) || {};\r\n    const { patientId, patientName } = patientModule;\r\n\r\n    const generalImageModule =\r\n      cornerstone.metaData.get('generalImageModule', imageId) || {};\r\n    const { instanceNumber } = generalImageModule;\r\n\r\n    const cineModule = cornerstone.metaData.get('cineModule', imageId) || {};\r\n    const { frameTime } = cineModule;\r\n\r\n    const frameRate = formatNumberPrecision(1000 / frameTime, 1);\r\n    const compression = getCompression(imageId);\r\n    const wwwc = `W: ${\r\n      windowWidth.toFixed ? windowWidth.toFixed(0) : windowWidth\r\n    } L: ${windowWidth.toFixed ? windowCenter.toFixed(0) : windowCenter}`;\r\n    const imageDimensions = `${columns} x ${rows}`;\r\n\r\n    const { imageIndex, stackSize } = this.props;\r\n\r\n    const inconsistencyWarningsOn = inconsistencyWarnings && inconsistencyWarnings.length !== 0 ? true : false;\r\n    const getWarningContent = (warningList) => {\r\n      if (Array.isArray(warningList)) {\r\n        const listedWarnings = warningList.map((warn, index) => {\r\n          return <li key={index}>{warn}</li>;\r\n        });\r\n\r\n        return <ol>{listedWarnings}</ol>;\r\n      } else {\r\n        return <React.Fragment>{warningList}</React.Fragment>;\r\n      }\r\n    };\r\n\r\n    const getWarningInfo = (seriesNumber, inconsistencyWarnings) => {\r\n      return(\r\n        <React.Fragment>\r\n        {inconsistencyWarnings.length != 0 ? (\r\n          <OverlayTrigger\r\n            key={seriesNumber}\r\n            placement=\"left\"\r\n            overlay={\r\n              <Tooltip\r\n                placement=\"left\"\r\n                className=\"in tooltip-warning\"\r\n                id=\"tooltip-left\"\r\n              >\r\n                <div className=\"warningTitle\">Series Inconsistencies</div>\r\n                <div className=\"warningContent\">{getWarningContent(inconsistencyWarnings)}</div>\r\n              </Tooltip>\r\n            }\r\n          >\r\n            <div className={classNames('warning')}>\r\n              <span className=\"warning-icon\">\r\n                <Icon name=\"exclamation-triangle\" />\r\n              </span>\r\n            </div>\r\n          </OverlayTrigger>\r\n        ) : (\r\n          <React.Fragment></React.Fragment>\r\n          )}\r\n      </React.Fragment>\r\n      );\r\n    };\r\n\r\n    const normal = (\r\n      <React.Fragment>\r\n        <div className=\"top-left overlay-element\">\r\n          <div>{formatPN(patientName)}</div>\r\n          <div>{patientId}</div>\r\n        </div>\r\n        <div className=\"top-right overlay-element\">\r\n          <div>{studyDescription}</div>\r\n          <div>\r\n            {formatDICOMDate(studyDate)} {formatDICOMTime(studyTime)}\r\n          </div>\r\n        </div>\r\n        <div className=\"bottom-right overlay-element\">\r\n          <div>Zoom: {zoomPercentage}%</div>\r\n          <div>{wwwc}</div>\r\n          <div className=\"compressionIndicator\">{compression}</div>\r\n        </div>\r\n        <div className=\"bottom-left2 warning\">\r\n          <div>{inconsistencyWarningsOn ? getWarningInfo(seriesNumber, inconsistencyWarnings) : ''}</div>\r\n        </div>\r\n        <div className=\"bottom-left overlay-element\">\r\n          <div>{seriesNumber >= 0 ? `Ser: ${seriesNumber}` : ''}</div>\r\n          <div>\r\n            {stackSize > 1\r\n              ? `Img: ${instanceNumber} ${imageIndex}/${stackSize}`\r\n              : ''}\r\n          </div>\r\n          <div>\r\n            {frameRate >= 0 ? `${formatNumberPrecision(frameRate, 2)} FPS` : ''}\r\n            <div>{imageDimensions}</div>\r\n            <div>\r\n              {isValidNumber(sliceLocation)\r\n                ? `Loc: ${formatNumberPrecision(sliceLocation, 2)} mm `\r\n                : ''}\r\n              {sliceThickness\r\n                ? `Thick: ${formatNumberPrecision(sliceThickness, 2)} mm`\r\n                : ''}\r\n            </div>\r\n            <div>{seriesDescription}</div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n\r\n    return <div className=\"OHIFCornerstoneViewportOverlay\">{normal}</div>;\r\n  }\r\n}\r\n\r\nexport default OHIFCornerstoneViewportOverlay;\r\n","import CornerstoneViewport from 'react-cornerstone-viewport';\r\nimport OHIF from '@ohif/core';\r\nimport { connect } from 'react-redux';\r\nimport throttle from 'lodash.throttle';\r\nimport { setEnabledElement } from './state';\r\n\r\nconst { setViewportActive, setViewportSpecificData } = OHIF.redux.actions;\r\nconst {\r\n  onAdded,\r\n  onRemoved,\r\n  onModified,\r\n} = OHIF.measurements.MeasurementHandlers;\r\n\r\n// TODO: Transition to enums for the action names so that we can ensure they stay up to date\r\n// everywhere they're used.\r\nconst MEASUREMENT_ACTION_MAP = {\r\n  added: onAdded,\r\n  removed: onRemoved,\r\n  modified: throttle(event => {\r\n    return onModified(event);\r\n  }, 300),\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let dataFromStore;\r\n\r\n  // TODO: This may not be updated anymore :thinking:\r\n  if (state.extensions && state.extensions.cornerstone) {\r\n    dataFromStore = state.extensions.cornerstone;\r\n  }\r\n\r\n  // If this is the active viewport, enable prefetching.\r\n  const { viewportIndex } = ownProps; //.viewportData;\r\n  const isActive = viewportIndex === state.viewports.activeViewportIndex;\r\n  const viewportSpecificData =\r\n    state.viewports.viewportSpecificData[viewportIndex] || {};\r\n\r\n  // CINE\r\n  let isPlaying = false;\r\n  let frameRate = 24;\r\n\r\n  if (viewportSpecificData && viewportSpecificData.cine) {\r\n    const cine = viewportSpecificData.cine;\r\n\r\n    isPlaying = cine.isPlaying === true;\r\n    frameRate = cine.cineFrameRate || frameRate;\r\n  }\r\n\r\n  return {\r\n    // layout: state.viewports.layout,\r\n    isActive,\r\n    // TODO: Need a cleaner and more versatile way.\r\n    // Currently justing using escape hatch + commands\r\n    // activeTool: activeButton && activeButton.command,\r\n    ...dataFromStore,\r\n    isStackPrefetchEnabled: isActive,\r\n    isPlaying,\r\n    frameRate,\r\n    //stack: viewportSpecificData.stack,\r\n    // viewport: viewportSpecificData.viewport,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  const { viewportIndex } = ownProps;\r\n\r\n  return {\r\n    setViewportActive: () => {\r\n      dispatch(setViewportActive(viewportIndex));\r\n    },\r\n\r\n    setViewportSpecificData: data => {\r\n      dispatch(setViewportSpecificData(viewportIndex, data));\r\n    },\r\n\r\n    /**\r\n     * Our component \"enables\" the underlying dom element on \"componentDidMount\"\r\n     * It listens for that event, and then emits the enabledElement. We can grab\r\n     * a reference to it here, to make playing with cornerstone's native methods\r\n     * easier.\r\n     */\r\n    onElementEnabled: event => {\r\n      const enabledElement = event.detail.element;\r\n      setEnabledElement(viewportIndex, enabledElement);\r\n      dispatch(\r\n        setViewportSpecificData(viewportIndex, {\r\n          // TODO: Hack to make sure our plugin info is available from the outset\r\n          plugin: 'cornerstone',\r\n        })\r\n      );\r\n    },\r\n\r\n    onMeasurementsChanged: (event, action) => {\r\n      return MEASUREMENT_ACTION_MAP[action](event);\r\n    },\r\n  };\r\n};\r\n\r\nconst ConnectedCornerstoneViewport = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CornerstoneViewport);\r\n\r\nexport default ConnectedCornerstoneViewport;\r\n","import React, { Component } from 'react';\r\n\r\nimport OHIFCornerstoneViewportOverlay from './components/OHIFCornerstoneViewportOverlay'\r\nimport ConnectedCornerstoneViewport from './ConnectedCornerstoneViewport';\r\nimport OHIF from '@ohif/core';\r\nimport PropTypes from 'prop-types';\r\nimport cornerstone from 'cornerstone-core';\r\n\r\nconst { StackManager } = OHIF.utils;\r\n\r\nclass OHIFCornerstoneViewport extends Component {\r\n  state = {\r\n    viewportData: null,\r\n  };\r\n\r\n  static defaultProps = {\r\n    customProps: {},\r\n  };\r\n\r\n  static propTypes = {\r\n    studies: PropTypes.object,\r\n    displaySet: PropTypes.object,\r\n    viewportIndex: PropTypes.number,\r\n    children: PropTypes.node,\r\n    customProps: PropTypes.object,\r\n  };\r\n\r\n  static id = 'OHIFCornerstoneViewport';\r\n\r\n  static init() {\r\n    console.log('OHIFCornerstoneViewport init()');\r\n  }\r\n\r\n  static destroy() {\r\n    console.log('OHIFCornerstoneViewport destroy()');\r\n    StackManager.clearStacks();\r\n  }\r\n\r\n  /**\r\n   * Obtain the CornerstoneTools Stack for the specified display set.\r\n   *\r\n   * @param {Object[]} studies\r\n   * @param {String} StudyInstanceUID\r\n   * @param {String} displaySetInstanceUID\r\n   * @param {String} [SOPInstanceUID]\r\n   * @param {Number} [frameIndex=1]\r\n   * @return {Object} CornerstoneTools Stack\r\n   */\r\n  static getCornerstoneStack(\r\n    studies,\r\n    StudyInstanceUID,\r\n    displaySetInstanceUID,\r\n    SOPInstanceUID,\r\n    frameIndex = 0\r\n  ) {\r\n    if (!studies || !studies.length) {\r\n      throw new Error('Studies not provided.');\r\n    }\r\n\r\n    if (!StudyInstanceUID) {\r\n      throw new Error('StudyInstanceUID not provided.');\r\n    }\r\n\r\n    if (!displaySetInstanceUID) {\r\n      throw new Error('StudyInstanceUID not provided.');\r\n    }\r\n\r\n    // Create shortcut to displaySet\r\n    const study = studies.find(\r\n      study => study.StudyInstanceUID === StudyInstanceUID\r\n    );\r\n\r\n    if (!study) {\r\n      throw new Error('Study not found.');\r\n    }\r\n\r\n    const displaySet = study.displaySets.find(set => {\r\n      return set.displaySetInstanceUID === displaySetInstanceUID;\r\n    });\r\n\r\n    if (!displaySet) {\r\n      throw new Error('Display Set not found.');\r\n    }\r\n\r\n    // Get stack from Stack Manager\r\n    const storedStack = StackManager.findOrCreateStack(study, displaySet);\r\n\r\n    // Clone the stack here so we don't mutate it\r\n    const stack = Object.assign({}, storedStack);\r\n    stack.currentImageIdIndex = frameIndex;\r\n\r\n    if (SOPInstanceUID) {\r\n      const index = stack.imageIds.findIndex(imageId => {\r\n        const imageIdSOPInstanceUID = cornerstone.metaData.get(\r\n          'SOPInstanceUID',\r\n          imageId\r\n        );\r\n\r\n        return imageIdSOPInstanceUID === SOPInstanceUID;\r\n      });\r\n\r\n      if (index > -1) {\r\n        stack.currentImageIdIndex = index;\r\n      } else {\r\n        console.warn(\r\n          'SOPInstanceUID provided was not found in specified DisplaySet'\r\n        );\r\n      }\r\n    }\r\n\r\n    return stack;\r\n  }\r\n\r\n  getViewportData = async (\r\n    studies,\r\n    StudyInstanceUID,\r\n    displaySetInstanceUID,\r\n    SOPInstanceUID,\r\n    frameIndex\r\n  ) => {\r\n    let viewportData;\r\n\r\n    const stack = OHIFCornerstoneViewport.getCornerstoneStack(\r\n      studies,\r\n      StudyInstanceUID,\r\n      displaySetInstanceUID,\r\n      SOPInstanceUID,\r\n      frameIndex\r\n    );\r\n\r\n    viewportData = {\r\n      StudyInstanceUID,\r\n      displaySetInstanceUID,\r\n      stack,\r\n    };\r\n\r\n    return viewportData;\r\n  };\r\n\r\n  setStateFromProps() {\r\n    const { studies, displaySet } = this.props.viewportData;\r\n    const {\r\n      StudyInstanceUID,\r\n      displaySetInstanceUID,\r\n      sopClassUIDs,\r\n      SOPInstanceUID,\r\n      frameIndex,\r\n    } = displaySet;\r\n\r\n    if (!StudyInstanceUID || !displaySetInstanceUID) {\r\n      return;\r\n    }\r\n\r\n    if (sopClassUIDs && sopClassUIDs.length > 1) {\r\n      console.warn(\r\n        'More than one SOPClassUID in the same series is not yet supported.'\r\n      );\r\n    }\r\n\r\n    this.getViewportData(\r\n      studies,\r\n      StudyInstanceUID,\r\n      displaySetInstanceUID,\r\n      SOPInstanceUID,\r\n      frameIndex\r\n    ).then(viewportData => {\r\n      this.setState({\r\n        viewportData,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setStateFromProps();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { displaySet } = this.props.viewportData;\r\n    const prevDisplaySet = prevProps.viewportData.displaySet;\r\n\r\n    if (\r\n      displaySet.displaySetInstanceUID !==\r\n      prevDisplaySet.displaySetInstanceUID ||\r\n      displaySet.SOPInstanceUID !== prevDisplaySet.SOPInstanceUID ||\r\n      displaySet.frameIndex !== prevDisplaySet.frameIndex\r\n    ) {\r\n      this.setStateFromProps();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let childrenWithProps = null;\r\n\r\n    if (!this.state.viewportData) {\r\n      return null;\r\n    }\r\n    const { viewportIndex } = this.props;\r\n    const { inconsistencyWarnings } = this.props.viewportData.displaySet;\r\n    const {\r\n      imageIds,\r\n      currentImageIdIndex,\r\n      // If this comes from the instance, would be a better default\r\n      // `FrameTime` in the instance\r\n      // frameRate = 0,\r\n    } = this.state.viewportData.stack;\r\n\r\n    // TODO: Does it make more sense to use Context?\r\n    if (this.props.children && this.props.children.length) {\r\n      childrenWithProps = this.props.children.map((child, index) => {\r\n        return (\r\n          child &&\r\n          React.cloneElement(child, {\r\n            viewportIndex: this.props.viewportIndex,\r\n            key: index,\r\n          })\r\n        );\r\n      });\r\n    }\r\n\r\n    const newImageHandler = ({ currentImageIdIndex, sopInstanceUid }) => {\r\n      const { displaySet } = this.props.viewportData;\r\n      const { StudyInstanceUID } = displaySet;\r\n\r\n      if (currentImageIdIndex >= 0) {\r\n        this.props.onNewImage({\r\n          StudyInstanceUID,\r\n          SOPInstanceUID: sopInstanceUid,\r\n          frameIndex: currentImageIdIndex,\r\n          activeViewportIndex: viewportIndex,\r\n        });\r\n      }\r\n    };\r\n\r\n    const warningsOverlay = props => {\r\n      return <OHIFCornerstoneViewportOverlay {...props} inconsistencyWarnings={inconsistencyWarnings} />\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <ConnectedCornerstoneViewport\r\n          viewportIndex={viewportIndex}\r\n          imageIds={imageIds}\r\n          imageIdIndex={currentImageIdIndex}\r\n          onNewImageDebounced={newImageHandler}\r\n          onNewImageDebounceTime={300}\r\n          viewportOverlayComponent={warningsOverlay}\r\n          // ~~ Connected (From REDUX)\r\n          // frameRate={frameRate}\r\n          // isPlaying={false}\r\n          // isStackPrefetchEnabled={true}\r\n          // onElementEnabled={() => {}}\r\n          // setViewportActive{() => {}}\r\n          {...this.props.customProps}\r\n        />\r\n        {childrenWithProps}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OHIFCornerstoneViewport;\r\n"],"sourceRoot":""}